#include <iostream>
#include <cmath>
using namespace std;


class Point {
    public:
        int x, y;

        Point(int x = 0, int y = 0) : x(x), y(y) {}

        Point(const Point &p) : x(p.x), y(p.y) {}

        void display() const {
            cout << "Point(" << x << ", " << y << ")" << endl;
        }

        void move(int dx, int dy) {
            x += dx;
            y += dy;
        }
};

class Section {
    private:
        Point *pbeg, *pend;

    public:
    
        Section() {
            pbeg = new Point(0, 0);
            pend = new Point(0, 0);
        }

        Section(int x1, int y1, int x2, int y2) {
            pbeg = new Point(x1, y1);
            pend = new Point(x2, y2);
        }

        Section(const Section &other) {
            pbeg = new Point(*other.pbeg);
            pend = new Point(*other.pend);
        }

        ~Section() {
            delete pbeg;
            delete pend;
            cout << "Section has been destroyed." << endl;
        }

        void display() const {
            cout << "Section: ";
            pbeg->display();
            cout << " to ";
            pend->display();
        }

        double length() const {
            return sqrt(pow(pend->x - pbeg->x, 2) + pow(pend->y - pbeg->y, 2));
        }
};

int main() {
    
    Section section(1, 2, 4, 6);

